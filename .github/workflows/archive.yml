name: Build and publish archives
on:
  push:
    tags:
      - "*"
jobs:
  # Build tar archives for all supported platforms
  build-archives:
    name: Build archives
    runs-on: ${{ matrix.os }}
    permissions:
      contents: write
      packages: write
    strategy:
      fail-fast: false
      matrix:
        target:
          - x86_64-apple-darwin
          - aarch64-apple-darwin
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
          - i686-unknown-linux-musl
        toolchain: [stable]
        include:
          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin
            use-cross: false
          - build: macos-aarch64
            os: macos-11
            target: aarch64-apple-darwin
            use-cross: false
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-musl
            use-cross: true
          - build: aarch64
            os: ubuntu-latest
            target: aarch64-unknown-linux-musl
            use-cross: true
          - build: i686
            os: ubuntu-latest
            target: i686-unknown-linux-musl
            use-cross: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          target: ${{ matrix.target }}
          override: true
          default: true
          profile: minimal
      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
      - name: Build binaries
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --verbose --release --target ${{ matrix.target }}
          use-cross: ${{ matrix.use-cross }}
      - name: Build archive
        shell: bash
        run: |
          name="chimney-cli"
          dirname="$name-${{ env.VERSION }}-${{ matrix.target }}"

          mkdir "$dirname"

          mv "target/${{ matrix.target }}/release/$name" "$dirname"

          ARCHIVE="$dirname.tar.gz"
          tar -czf "$ARCHIVE" "$dirname"

          openssl dgst -r -sha256 -out "$ARCHIVE".sha256 "$ARCHIVE"
          openssl dgst -r -sha512 -out "$ARCHIVE".sha512 "$ARCHIVE"

          echo "ASSET=$ARCHIVE" >> $GITHUB_ENV
      - name: Upload release archive
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          fail_on_unmatched_files: true
          files: |
            ${{ env.ASSET }}
            ${{ env.ASSET }}.sha256
            ${{ env.ASSET }}.sha512
